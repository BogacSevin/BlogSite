{"remainingRequest":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cihazbir/my-project/src/views/Satis.vue?vue&type=template&id=06fc3474&","dependencies":[{"path":"/Users/cihazbir/my-project/src/views/Satis.vue","mtime":1648470693359},{"path":"/Users/cihazbir/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}