{"remainingRequest":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cihazbir/my-project/src/views/Profil.vue?vue&type=template&id=48ec5a14&","dependencies":[{"path":"/Users/cihazbir/my-project/src/views/Profil.vue","mtime":1648542400207},{"path":"/Users/cihazbir/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}