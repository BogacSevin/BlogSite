{"remainingRequest":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cihazbir/my-project/src/views/kurslar.vue?vue&type=template&id=8d198b30&","dependencies":[{"path":"/Users/cihazbir/my-project/src/views/kurslar.vue","mtime":1648563838377},{"path":"/Users/cihazbir/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cihazbir/my-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}